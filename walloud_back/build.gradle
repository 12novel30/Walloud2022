plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.spring.midiv'
version = '1.0.2'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	// for S3
	maven { url 'https://repo.spring.io/libs-milestone'}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	// for S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	// for S3, multifile -> file
	implementation 'commons-io:commons-io:2.6'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
	testImplementation 'org.mockito:mockito-core:4.5.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'

	// for S3, multifile -> file
	compileOnly 'commons-fileupload:commons-fileupload:1.3.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

def webappDir = "$projectDir/../walloud_front"

sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/dist",
			"$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "copyWebApp"
}


task copyWebApp(type: Copy) {
	dependsOn "buildReact"
	from "$webappDir/dist"
	into "$projectDir/src/main/resources/static"
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task installReact(type: Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install'
	} else {
		commandLine "npm", "audit", "fix"
		commandLine 'npm', 'install'
	}
}